package com.example.demo;

import java.io.IOException;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
public class IndexController {

	private PessoaNet pnet = new LojaCliente().getPessoaNet();
	
	@GetMapping("/")
	public String index(Model model) {
		
		return "index";
	}
	
	
	@GetMapping("/index2")
	public String index2(Model model) {
		try {
			model.addAttribute("pessoas", pnet.obterTodos().execute().body());
		} catch (IOException e) {
			System.out.println("Erro");
		}
		return "index2";
	}
	
	/*
	@GetMapping("/index2/{codigo}")
	public String index2(@PathVariable("codigo") Integer codigo, Model model) {
	    try {
	        model.addAttribute("pessoas", pnet.obter(codigo).execute().body());
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	    return "index2";
	}*/
	
	@GetMapping("/index2/{codigo}")
	public String index2(@PathVariable("codigo") Integer codigo, Model model) {
	    try {
	        // Tenta obter a pessoa com o código fornecido
	        List<Pessoa> body = (List<Pessoa>) pnet.obter(codigo).execute().body();
			List<Pessoa> pessoas = body;
	        
	        if (pessoas == null || pessoas.isEmpty()) {
	            // Lança uma exceção personalizada se não encontrar nenhuma pessoa
	            throw new RuntimeException("Nenhuma pessoa encontrada para o código: " + codigo);
	        }
	        
	        model.addAttribute("pessoas", pessoas);
	    } catch (IOException e) {
	        // Tratar exceção de entrada/saída
	        e.printStackTrace();
	    } catch (RuntimeException e) {
	        // Captura a exceção quando não há pessoa para o código fornecido
	        model.addAttribute("erro", e.getMessage());
	        return "error"; // Direciona para uma página de erro personalizada
	    }
	    
	    return "index2";
	}




	
	
	@GetMapping("/dashboard")
	public String dashboard(Model model) {
		try {
			model.addAttribute("pessoas", pnet.obterTodos().execute().body());
		} catch (IOException e) {
			System.out.println("Erro");
		}
		return "dashboard";
	}
	
	
	
	@RequestMapping("/erro")
	public String handleError() {
	    return "erro";
	}
	

	
	
}